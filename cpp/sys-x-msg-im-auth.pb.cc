// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-im-auth.proto

#include "sys-x-msg-im-auth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthClientAttachSimpleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthClientAttachSimpleReq>
      _instance;
} _XmsgImAuthClientAttachSimpleReq_default_instance_;
class XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthClientAttachSimpleRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthClientAttachSimpleRsp>
      _instance;
} _XmsgImAuthClientAttachSimpleRsp_default_instance_;
class XmsgImAuthUsrAuthInfoQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthUsrAuthInfoQueryReq>
      _instance;
} _XmsgImAuthUsrAuthInfoQueryReq_default_instance_;
class XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthUsrAuthInfoQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthUsrAuthInfoQueryRsp>
      _instance;
} _XmsgImAuthUsrAuthInfoQueryRsp_default_instance_;
class XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse>
      _instance;
} _XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgRegisteReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgRegisteReq>
      _instance;
} _XmsgImAuthOrgRegisteReq_default_instance_;
class XmsgImAuthOrgRegisteRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgRegisteRsp>
      _instance;
} _XmsgImAuthOrgRegisteRsp_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse>
      _instance;
} _XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgUpdateAccountInfoReq>
      _instance;
} _XmsgImAuthOrgUpdateAccountInfoReq_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse>
      _instance;
} _XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImAuthOrgUpdateAccountInfoRsp>
      _instance;
} _XmsgImAuthOrgUpdateAccountInfoRsp_default_instance_;
namespace protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto {
void InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse();
  }
  ::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthClientAttachSimpleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthClientAttachSimpleReq_default_instance_;
    new (ptr) ::XmsgImAuthClientAttachSimpleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthClientAttachSimpleReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthClientAttachSimpleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthClientAttachSimpleReqImpl);
}

void InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthClientAttachSimpleRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImClientDeviceInfo();
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthClientAttachSimpleRsp_default_instance_;
    new (ptr) ::XmsgImAuthClientAttachSimpleRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthClientAttachSimpleRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthClientAttachSimpleRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthClientAttachSimpleRspImpl);
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthUsrAuthInfoQueryReq_default_instance_;
    new (ptr) ::XmsgImAuthUsrAuthInfoQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthUsrAuthInfoQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthUsrAuthInfoQueryReqImpl);
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_net_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImClientDeviceInfo();
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthUsrAuthInfoQueryRsp_default_instance_;
    new (ptr) ::XmsgImAuthUsrAuthInfoQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthUsrAuthInfoQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthUsrAuthInfoQueryRspImpl);
}

void InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse();
  }
  ::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthOrgRegisteReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthOrgRegisteReq_default_instance_;
    new (ptr) ::XmsgImAuthOrgRegisteReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthOrgRegisteReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgRegisteReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgRegisteReqImpl);
}

void InitDefaultsXmsgImAuthOrgRegisteRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthOrgRegisteRsp_default_instance_;
    new (ptr) ::XmsgImAuthOrgRegisteRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthOrgRegisteRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgRegisteRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgRegisteRspImpl);
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse();
  }
  ::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthOrgUpdateAccountInfoReq_default_instance_;
    new (ptr) ::XmsgImAuthOrgUpdateAccountInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthOrgUpdateAccountInfoReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgUpdateAccountInfoReqImpl);
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse();
  }
  ::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImAuthOrgUpdateAccountInfoRsp_default_instance_;
    new (ptr) ::XmsgImAuthOrgUpdateAccountInfoRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImAuthOrgUpdateAccountInfoRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImAuthOrgUpdateAccountInfoRspImpl);
}

::google::protobuf::Metadata file_level_metadata[14];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, salt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, usr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, expired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthClientAttachSimpleRsp, ext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, gts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, expired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthUsrAuthInfoQueryRsp, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteReq, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgRegisteRsp, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq, upsert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoReq, remove_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImAuthOrgUpdateAccountInfoRsp, ext_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse)},
  { 9, -1, sizeof(::XmsgImAuthClientAttachSimpleReq)},
  { 20, 27, sizeof(::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse)},
  { 29, -1, sizeof(::XmsgImAuthClientAttachSimpleRsp)},
  { 40, -1, sizeof(::XmsgImAuthUsrAuthInfoQueryReq)},
  { 47, 54, sizeof(::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse)},
  { 56, -1, sizeof(::XmsgImAuthUsrAuthInfoQueryRsp)},
  { 66, 73, sizeof(::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse)},
  { 75, -1, sizeof(::XmsgImAuthOrgRegisteReq)},
  { 82, -1, sizeof(::XmsgImAuthOrgRegisteRsp)},
  { 88, 95, sizeof(::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse)},
  { 97, -1, sizeof(::XmsgImAuthOrgUpdateAccountInfoReq)},
  { 105, 112, sizeof(::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse)},
  { 114, -1, sizeof(::XmsgImAuthOrgUpdateAccountInfoRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthClientAttachSimpleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthClientAttachSimpleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthUsrAuthInfoQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthUsrAuthInfoQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgRegisteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgRegisteRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgUpdateAccountInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImAuthOrgUpdateAccountInfoRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sys-x-msg-im-auth.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027sys-x-msg-im-auth.proto\032\027net-x-msg-im-"
      "auth.proto\"\312\001\n\037XmsgImAuthClientAttachSim"
      "pleReq\022\r\n\005token\030\001 \001(\t\022\014\n\004salt\030\002 \001(\t\022\014\n\004s"
      "ign\030\003 \001(\t\022\013\n\003alg\030\004 \001(\t\022\013\n\003cgt\030\005 \001(\t\0226\n\003e"
      "xt\030\006 \003(\0132).XmsgImAuthClientAttachSimpleR"
      "eq.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
      "value\030\002 \001(\t:\0028\001\"\347\001\n\037XmsgImAuthClientAtta"
      "chSimpleRsp\022\013\n\003usr\030\001 \001(\t\022\016\n\006secret\030\002 \001(\t"
      "\022\013\n\003gts\030\003 \001(\004\022\017\n\007expired\030\004 \001(\004\022%\n\004info\030\005"
      " \001(\0132\027.XmsgImClientDeviceInfo\0226\n\003ext\030\006 \003"
      "(\0132).XmsgImAuthClientAttachSimpleRsp.Ext"
      "Entry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
      "\002 \001(\t:\0028\001\";\n\035XmsgImAuthUsrAuthInfoQueryR"
      "eq\022\r\n\005token\030\001 \001(\t\022\013\n\003cgt\030\002 \001(\t\"\326\001\n\035XmsgI"
      "mAuthUsrAuthInfoQueryRsp\022\016\n\006secret\030\001 \001(\t"
      "\022\013\n\003gts\030\002 \001(\004\022\017\n\007expired\030\003 \001(\004\022%\n\004info\030\004"
      " \001(\0132\027.XmsgImClientDeviceInfo\0224\n\003ext\030\005 \003"
      "(\0132\'.XmsgImAuthUsrAuthInfoQueryRsp.ExtEn"
      "try\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
      "\001(\t:\0028\001\"\210\001\n\027XmsgImAuthOrgRegisteReq\022\016\n\006e"
      "nable\030\001 \001(\010\0220\n\004info\030\002 \003(\0132\".XmsgImAuthOr"
      "gRegisteReq.InfoEntry\032+\n\tInfoEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"&\n\027XmsgImAuth"
      "OrgRegisteRsp\022\013\n\003cgt\030\001 \001(\t\"\257\001\n!XmsgImAut"
      "hOrgUpdateAccountInfoReq\022\013\n\003cgt\030\001 \001(\t\022>\n"
      "\006upsert\030\002 \003(\0132..XmsgImAuthOrgUpdateAccou"
      "ntInfoReq.UpsertEntry\022\016\n\006remove\030\003 \003(\t\032-\n"
      "\013UpsertEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
      ":\0028\001\"\211\001\n!XmsgImAuthOrgUpdateAccountInfoR"
      "sp\0228\n\003ext\030\001 \003(\0132+.XmsgImAuthOrgUpdateAcc"
      "ountInfoRsp.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\033\n\010x.msg.pbB\017Xm"
      "sgImAuthSysPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1301);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sys-x-msg-im-auth.proto", &protobuf_RegisterTypes);
  ::protobuf_net_2dx_2dmsg_2dim_2dauth_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto

// ===================================================================

XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse() {}
XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[0];
}
void XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthClientAttachSimpleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthClientAttachSimpleReq::kTokenFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kSaltFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kSignFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kAlgFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kCgtFieldNumber;
const int XmsgImAuthClientAttachSimpleReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthClientAttachSimpleReq::XmsgImAuthClientAttachSimpleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthClientAttachSimpleReq)
}
XmsgImAuthClientAttachSimpleReq::XmsgImAuthClientAttachSimpleReq(const XmsgImAuthClientAttachSimpleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.salt().size() > 0) {
    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  alg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alg().size() > 0) {
    alg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alg_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthClientAttachSimpleReq)
}

void XmsgImAuthClientAttachSimpleReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImAuthClientAttachSimpleReq::~XmsgImAuthClientAttachSimpleReq() {
  // @@protoc_insertion_point(destructor:XmsgImAuthClientAttachSimpleReq)
  SharedDtor();
}

void XmsgImAuthClientAttachSimpleReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImAuthClientAttachSimpleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthClientAttachSimpleReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthClientAttachSimpleReq& XmsgImAuthClientAttachSimpleReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleReq();
  return *internal_default_instance();
}

XmsgImAuthClientAttachSimpleReq* XmsgImAuthClientAttachSimpleReq::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthClientAttachSimpleReq* n = new XmsgImAuthClientAttachSimpleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthClientAttachSimpleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthClientAttachSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImAuthClientAttachSimpleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthClientAttachSimpleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string salt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_salt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->salt().data(), static_cast<int>(this->salt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.salt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), static_cast<int>(this->sign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alg().data(), static_cast<int>(this->alg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.alg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthClientAttachSimpleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthClientAttachSimpleReq)
  return false;
#undef DO_
}

void XmsgImAuthClientAttachSimpleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthClientAttachSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string salt = 2;
  if (this->salt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->salt().data(), static_cast<int>(this->salt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.salt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->salt(), output);
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sign(), output);
  }

  // string alg = 4;
  if (this->alg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alg().data(), static_cast<int>(this->alg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.alg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alg(), output);
  }

  // string cgt = 5;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cgt(), output);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthClientAttachSimpleReq)
}

::google::protobuf::uint8* XmsgImAuthClientAttachSimpleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthClientAttachSimpleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string salt = 2;
  if (this->salt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->salt().data(), static_cast<int>(this->salt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.salt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->salt(), target);
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sign(), target);
  }

  // string alg = 4;
  if (this->alg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alg().data(), static_cast<int>(this->alg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.alg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alg(), target);
  }

  // string cgt = 5;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cgt(), target);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthClientAttachSimpleReq)
  return target;
}

size_t XmsgImAuthClientAttachSimpleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthClientAttachSimpleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string salt = 2;
  if (this->salt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->salt());
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // string alg = 4;
  if (this->alg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alg());
  }

  // string cgt = 5;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthClientAttachSimpleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthClientAttachSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthClientAttachSimpleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthClientAttachSimpleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthClientAttachSimpleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthClientAttachSimpleReq)
    MergeFrom(*source);
  }
}

void XmsgImAuthClientAttachSimpleReq::MergeFrom(const XmsgImAuthClientAttachSimpleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthClientAttachSimpleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.salt().size() > 0) {

    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.alg().size() > 0) {

    alg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alg_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImAuthClientAttachSimpleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthClientAttachSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthClientAttachSimpleReq::CopyFrom(const XmsgImAuthClientAttachSimpleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthClientAttachSimpleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthClientAttachSimpleReq::IsInitialized() const {
  return true;
}

void XmsgImAuthClientAttachSimpleReq::Swap(XmsgImAuthClientAttachSimpleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthClientAttachSimpleReq::InternalSwap(XmsgImAuthClientAttachSimpleReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  token_.Swap(&other->token_);
  salt_.Swap(&other->salt_);
  sign_.Swap(&other->sign_);
  alg_.Swap(&other->alg_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthClientAttachSimpleReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse() {}
XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[2];
}
void XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthClientAttachSimpleRsp::InitAsDefaultInstance() {
  ::_XmsgImAuthClientAttachSimpleRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImClientDeviceInfo*>(
      ::XmsgImClientDeviceInfo::internal_default_instance());
}
void XmsgImAuthClientAttachSimpleRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthClientAttachSimpleRsp::kUsrFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kSecretFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kGtsFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kExpiredFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kInfoFieldNumber;
const int XmsgImAuthClientAttachSimpleRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthClientAttachSimpleRsp::XmsgImAuthClientAttachSimpleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthClientAttachSimpleRsp)
}
XmsgImAuthClientAttachSimpleRsp::XmsgImAuthClientAttachSimpleRsp(const XmsgImAuthClientAttachSimpleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  usr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.usr().size() > 0) {
    usr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_);
  }
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImClientDeviceInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&gts_, &from.gts_,
    static_cast<size_t>(reinterpret_cast<char*>(&expired_) -
    reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthClientAttachSimpleRsp)
}

void XmsgImAuthClientAttachSimpleRsp::SharedCtor() {
  usr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&info_)) + sizeof(expired_));
  _cached_size_ = 0;
}

XmsgImAuthClientAttachSimpleRsp::~XmsgImAuthClientAttachSimpleRsp() {
  // @@protoc_insertion_point(destructor:XmsgImAuthClientAttachSimpleRsp)
  SharedDtor();
}

void XmsgImAuthClientAttachSimpleRsp::SharedDtor() {
  usr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImAuthClientAttachSimpleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthClientAttachSimpleRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthClientAttachSimpleRsp& XmsgImAuthClientAttachSimpleRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleRsp();
  return *internal_default_instance();
}

XmsgImAuthClientAttachSimpleRsp* XmsgImAuthClientAttachSimpleRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthClientAttachSimpleRsp* n = new XmsgImAuthClientAttachSimpleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthClientAttachSimpleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthClientAttachSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  usr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&gts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  _internal_metadata_.Clear();
}

bool XmsgImAuthClientAttachSimpleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthClientAttachSimpleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string usr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr().data(), static_cast<int>(this->usr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleRsp.usr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleRsp.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expired = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImClientDeviceInfo info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthClientAttachSimpleRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthClientAttachSimpleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthClientAttachSimpleRsp)
  return false;
#undef DO_
}

void XmsgImAuthClientAttachSimpleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthClientAttachSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string usr = 1;
  if (this->usr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr().data(), static_cast<int>(this->usr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleRsp.usr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->usr(), output);
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleRsp.secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secret(), output);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->gts(), output);
  }

  // uint64 expired = 4;
  if (this->expired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->expired(), output);
  }

  // .XmsgImClientDeviceInfo info = 5;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->info_, output);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthClientAttachSimpleRsp)
}

::google::protobuf::uint8* XmsgImAuthClientAttachSimpleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthClientAttachSimpleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string usr = 1;
  if (this->usr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr().data(), static_cast<int>(this->usr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleRsp.usr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->usr(), target);
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthClientAttachSimpleRsp.secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secret(), target);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->gts(), target);
  }

  // uint64 expired = 4;
  if (this->expired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->expired(), target);
  }

  // .XmsgImClientDeviceInfo info = 5;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->info_, deterministic, target);
  }

  // map<string, string> ext = 6;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthClientAttachSimpleRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthClientAttachSimpleRsp)
  return target;
}

size_t XmsgImAuthClientAttachSimpleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthClientAttachSimpleRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string usr = 1;
  if (this->usr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr());
  }

  // string secret = 2;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // .XmsgImClientDeviceInfo info = 5;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 gts = 3;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 expired = 4;
  if (this->expired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expired());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthClientAttachSimpleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthClientAttachSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthClientAttachSimpleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthClientAttachSimpleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthClientAttachSimpleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthClientAttachSimpleRsp)
    MergeFrom(*source);
  }
}

void XmsgImAuthClientAttachSimpleRsp::MergeFrom(const XmsgImAuthClientAttachSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthClientAttachSimpleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.usr().size() > 0) {

    usr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_);
  }
  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImClientDeviceInfo::MergeFrom(from.info());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.expired() != 0) {
    set_expired(from.expired());
  }
}

void XmsgImAuthClientAttachSimpleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthClientAttachSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthClientAttachSimpleRsp::CopyFrom(const XmsgImAuthClientAttachSimpleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthClientAttachSimpleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthClientAttachSimpleRsp::IsInitialized() const {
  return true;
}

void XmsgImAuthClientAttachSimpleRsp::Swap(XmsgImAuthClientAttachSimpleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthClientAttachSimpleRsp::InternalSwap(XmsgImAuthClientAttachSimpleRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  usr_.Swap(&other->usr_);
  secret_.Swap(&other->secret_);
  swap(info_, other->info_);
  swap(gts_, other->gts_);
  swap(expired_, other->expired_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthClientAttachSimpleRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImAuthUsrAuthInfoQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthUsrAuthInfoQueryReq::kTokenFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthUsrAuthInfoQueryReq::XmsgImAuthUsrAuthInfoQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthUsrAuthInfoQueryReq)
}
XmsgImAuthUsrAuthInfoQueryReq::XmsgImAuthUsrAuthInfoQueryReq(const XmsgImAuthUsrAuthInfoQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthUsrAuthInfoQueryReq)
}

void XmsgImAuthUsrAuthInfoQueryReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImAuthUsrAuthInfoQueryReq::~XmsgImAuthUsrAuthInfoQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImAuthUsrAuthInfoQueryReq)
  SharedDtor();
}

void XmsgImAuthUsrAuthInfoQueryReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImAuthUsrAuthInfoQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthUsrAuthInfoQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthUsrAuthInfoQueryReq& XmsgImAuthUsrAuthInfoQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryReq();
  return *internal_default_instance();
}

XmsgImAuthUsrAuthInfoQueryReq* XmsgImAuthUsrAuthInfoQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthUsrAuthInfoQueryReq* n = new XmsgImAuthUsrAuthInfoQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthUsrAuthInfoQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImAuthUsrAuthInfoQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthUsrAuthInfoQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryReq.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthUsrAuthInfoQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthUsrAuthInfoQueryReq)
  return false;
#undef DO_
}

void XmsgImAuthUsrAuthInfoQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthUsrAuthInfoQueryReq)
}

::google::protobuf::uint8* XmsgImAuthUsrAuthInfoQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthUsrAuthInfoQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthUsrAuthInfoQueryReq)
  return target;
}

size_t XmsgImAuthUsrAuthInfoQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthUsrAuthInfoQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthUsrAuthInfoQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthUsrAuthInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthUsrAuthInfoQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthUsrAuthInfoQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthUsrAuthInfoQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthUsrAuthInfoQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImAuthUsrAuthInfoQueryReq::MergeFrom(const XmsgImAuthUsrAuthInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthUsrAuthInfoQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImAuthUsrAuthInfoQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthUsrAuthInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthUsrAuthInfoQueryReq::CopyFrom(const XmsgImAuthUsrAuthInfoQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthUsrAuthInfoQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthUsrAuthInfoQueryReq::IsInitialized() const {
  return true;
}

void XmsgImAuthUsrAuthInfoQueryReq::Swap(XmsgImAuthUsrAuthInfoQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthUsrAuthInfoQueryReq::InternalSwap(XmsgImAuthUsrAuthInfoQueryReq* other) {
  using std::swap;
  token_.Swap(&other->token_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthUsrAuthInfoQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse() {}
XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[5];
}
void XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthUsrAuthInfoQueryRsp::InitAsDefaultInstance() {
  ::_XmsgImAuthUsrAuthInfoQueryRsp_default_instance_._instance.get_mutable()->info_ = const_cast< ::XmsgImClientDeviceInfo*>(
      ::XmsgImClientDeviceInfo::internal_default_instance());
}
void XmsgImAuthUsrAuthInfoQueryRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthUsrAuthInfoQueryRsp::kSecretFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryRsp::kGtsFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryRsp::kExpiredFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryRsp::kInfoFieldNumber;
const int XmsgImAuthUsrAuthInfoQueryRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthUsrAuthInfoQueryRsp::XmsgImAuthUsrAuthInfoQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthUsrAuthInfoQueryRsp)
}
XmsgImAuthUsrAuthInfoQueryRsp::XmsgImAuthUsrAuthInfoQueryRsp(const XmsgImAuthUsrAuthInfoQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    info_ = new ::XmsgImClientDeviceInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&gts_, &from.gts_,
    static_cast<size_t>(reinterpret_cast<char*>(&expired_) -
    reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthUsrAuthInfoQueryRsp)
}

void XmsgImAuthUsrAuthInfoQueryRsp::SharedCtor() {
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&info_)) + sizeof(expired_));
  _cached_size_ = 0;
}

XmsgImAuthUsrAuthInfoQueryRsp::~XmsgImAuthUsrAuthInfoQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImAuthUsrAuthInfoQueryRsp)
  SharedDtor();
}

void XmsgImAuthUsrAuthInfoQueryRsp::SharedDtor() {
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void XmsgImAuthUsrAuthInfoQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthUsrAuthInfoQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthUsrAuthInfoQueryRsp& XmsgImAuthUsrAuthInfoQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp();
  return *internal_default_instance();
}

XmsgImAuthUsrAuthInfoQueryRsp* XmsgImAuthUsrAuthInfoQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthUsrAuthInfoQueryRsp* n = new XmsgImAuthUsrAuthInfoQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthUsrAuthInfoQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&gts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expired_) -
      reinterpret_cast<char*>(&gts_)) + sizeof(expired_));
  _internal_metadata_.Clear();
}

bool XmsgImAuthUsrAuthInfoQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthUsrAuthInfoQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string secret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryRsp.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 expired = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .XmsgImClientDeviceInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ext = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthUsrAuthInfoQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthUsrAuthInfoQueryRsp)
  return false;
#undef DO_
}

void XmsgImAuthUsrAuthInfoQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryRsp.secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->secret(), output);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gts(), output);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->expired(), output);
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthUsrAuthInfoQueryRsp)
}

::google::protobuf::uint8* XmsgImAuthUsrAuthInfoQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthUsrAuthInfoQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthUsrAuthInfoQueryRsp.secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->secret(), target);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gts(), target);
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->expired(), target);
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->info_, deterministic, target);
  }

  // map<string, string> ext = 5;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthUsrAuthInfoQueryRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthUsrAuthInfoQueryRsp)
  return target;
}

size_t XmsgImAuthUsrAuthInfoQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthUsrAuthInfoQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string secret = 1;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // .XmsgImClientDeviceInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  // uint64 gts = 2;
  if (this->gts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gts());
  }

  // uint64 expired = 3;
  if (this->expired() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expired());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthUsrAuthInfoQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthUsrAuthInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthUsrAuthInfoQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthUsrAuthInfoQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthUsrAuthInfoQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthUsrAuthInfoQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImAuthUsrAuthInfoQueryRsp::MergeFrom(const XmsgImAuthUsrAuthInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthUsrAuthInfoQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_info()) {
    mutable_info()->::XmsgImClientDeviceInfo::MergeFrom(from.info());
  }
  if (from.gts() != 0) {
    set_gts(from.gts());
  }
  if (from.expired() != 0) {
    set_expired(from.expired());
  }
}

void XmsgImAuthUsrAuthInfoQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthUsrAuthInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthUsrAuthInfoQueryRsp::CopyFrom(const XmsgImAuthUsrAuthInfoQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthUsrAuthInfoQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthUsrAuthInfoQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImAuthUsrAuthInfoQueryRsp::Swap(XmsgImAuthUsrAuthInfoQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthUsrAuthInfoQueryRsp::InternalSwap(XmsgImAuthUsrAuthInfoQueryRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  secret_.Swap(&other->secret_);
  swap(info_, other->info_);
  swap(gts_, other->gts_);
  swap(expired_, other->expired_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthUsrAuthInfoQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse() {}
XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::MergeFrom(const XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[7];
}
void XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthOrgRegisteReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthOrgRegisteReq::kEnableFieldNumber;
const int XmsgImAuthOrgRegisteReq::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthOrgRegisteReq::XmsgImAuthOrgRegisteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgRegisteReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthOrgRegisteReq)
}
XmsgImAuthOrgRegisteReq::XmsgImAuthOrgRegisteReq(const XmsgImAuthOrgRegisteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  enable_ = from.enable_;
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthOrgRegisteReq)
}

void XmsgImAuthOrgRegisteReq::SharedCtor() {
  enable_ = false;
  _cached_size_ = 0;
}

XmsgImAuthOrgRegisteReq::~XmsgImAuthOrgRegisteReq() {
  // @@protoc_insertion_point(destructor:XmsgImAuthOrgRegisteReq)
  SharedDtor();
}

void XmsgImAuthOrgRegisteReq::SharedDtor() {
}

void XmsgImAuthOrgRegisteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthOrgRegisteReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthOrgRegisteReq& XmsgImAuthOrgRegisteReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgRegisteReq();
  return *internal_default_instance();
}

XmsgImAuthOrgRegisteReq* XmsgImAuthOrgRegisteReq::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthOrgRegisteReq* n = new XmsgImAuthOrgRegisteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthOrgRegisteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthOrgRegisteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  enable_ = false;
  _internal_metadata_.Clear();
}

bool XmsgImAuthOrgRegisteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthOrgRegisteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgRegisteReq.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgRegisteReq.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthOrgRegisteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthOrgRegisteReq)
  return false;
#undef DO_
}

void XmsgImAuthOrgRegisteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthOrgRegisteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable(), output);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgRegisteReq.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgRegisteReq.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthOrgRegisteReq)
}

::google::protobuf::uint8* XmsgImAuthOrgRegisteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthOrgRegisteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable(), target);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgRegisteReq.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgRegisteReq.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthOrgRegisteReq)
  return target;
}

size_t XmsgImAuthOrgRegisteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthOrgRegisteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bool enable = 1;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthOrgRegisteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthOrgRegisteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthOrgRegisteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthOrgRegisteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthOrgRegisteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthOrgRegisteReq)
    MergeFrom(*source);
  }
}

void XmsgImAuthOrgRegisteReq::MergeFrom(const XmsgImAuthOrgRegisteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthOrgRegisteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void XmsgImAuthOrgRegisteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthOrgRegisteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthOrgRegisteReq::CopyFrom(const XmsgImAuthOrgRegisteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthOrgRegisteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthOrgRegisteReq::IsInitialized() const {
  return true;
}

void XmsgImAuthOrgRegisteReq::Swap(XmsgImAuthOrgRegisteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthOrgRegisteReq::InternalSwap(XmsgImAuthOrgRegisteReq* other) {
  using std::swap;
  info_.Swap(&other->info_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthOrgRegisteReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImAuthOrgRegisteRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthOrgRegisteRsp::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthOrgRegisteRsp::XmsgImAuthOrgRegisteRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgRegisteRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthOrgRegisteRsp)
}
XmsgImAuthOrgRegisteRsp::XmsgImAuthOrgRegisteRsp(const XmsgImAuthOrgRegisteRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthOrgRegisteRsp)
}

void XmsgImAuthOrgRegisteRsp::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImAuthOrgRegisteRsp::~XmsgImAuthOrgRegisteRsp() {
  // @@protoc_insertion_point(destructor:XmsgImAuthOrgRegisteRsp)
  SharedDtor();
}

void XmsgImAuthOrgRegisteRsp::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImAuthOrgRegisteRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthOrgRegisteRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthOrgRegisteRsp& XmsgImAuthOrgRegisteRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgRegisteRsp();
  return *internal_default_instance();
}

XmsgImAuthOrgRegisteRsp* XmsgImAuthOrgRegisteRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthOrgRegisteRsp* n = new XmsgImAuthOrgRegisteRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthOrgRegisteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthOrgRegisteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImAuthOrgRegisteRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthOrgRegisteRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgRegisteRsp.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthOrgRegisteRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthOrgRegisteRsp)
  return false;
#undef DO_
}

void XmsgImAuthOrgRegisteRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthOrgRegisteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgRegisteRsp.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthOrgRegisteRsp)
}

::google::protobuf::uint8* XmsgImAuthOrgRegisteRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthOrgRegisteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgRegisteRsp.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthOrgRegisteRsp)
  return target;
}

size_t XmsgImAuthOrgRegisteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthOrgRegisteRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthOrgRegisteRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthOrgRegisteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthOrgRegisteRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthOrgRegisteRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthOrgRegisteRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthOrgRegisteRsp)
    MergeFrom(*source);
  }
}

void XmsgImAuthOrgRegisteRsp::MergeFrom(const XmsgImAuthOrgRegisteRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthOrgRegisteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImAuthOrgRegisteRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthOrgRegisteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthOrgRegisteRsp::CopyFrom(const XmsgImAuthOrgRegisteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthOrgRegisteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthOrgRegisteRsp::IsInitialized() const {
  return true;
}

void XmsgImAuthOrgRegisteRsp::Swap(XmsgImAuthOrgRegisteRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthOrgRegisteRsp::InternalSwap(XmsgImAuthOrgRegisteRsp* other) {
  using std::swap;
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthOrgRegisteRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse() {}
XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::MergeFrom(const XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[10];
}
void XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthOrgUpdateAccountInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthOrgUpdateAccountInfoReq::kCgtFieldNumber;
const int XmsgImAuthOrgUpdateAccountInfoReq::kUpsertFieldNumber;
const int XmsgImAuthOrgUpdateAccountInfoReq::kRemoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthOrgUpdateAccountInfoReq::XmsgImAuthOrgUpdateAccountInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthOrgUpdateAccountInfoReq)
}
XmsgImAuthOrgUpdateAccountInfoReq::XmsgImAuthOrgUpdateAccountInfoReq(const XmsgImAuthOrgUpdateAccountInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remove_(from.remove_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  upsert_.MergeFrom(from.upsert_);
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthOrgUpdateAccountInfoReq)
}

void XmsgImAuthOrgUpdateAccountInfoReq::SharedCtor() {
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgImAuthOrgUpdateAccountInfoReq::~XmsgImAuthOrgUpdateAccountInfoReq() {
  // @@protoc_insertion_point(destructor:XmsgImAuthOrgUpdateAccountInfoReq)
  SharedDtor();
}

void XmsgImAuthOrgUpdateAccountInfoReq::SharedDtor() {
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgImAuthOrgUpdateAccountInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthOrgUpdateAccountInfoReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthOrgUpdateAccountInfoReq& XmsgImAuthOrgUpdateAccountInfoReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq();
  return *internal_default_instance();
}

XmsgImAuthOrgUpdateAccountInfoReq* XmsgImAuthOrgUpdateAccountInfoReq::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthOrgUpdateAccountInfoReq* n = new XmsgImAuthOrgUpdateAccountInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthOrgUpdateAccountInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthOrgUpdateAccountInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  upsert_.Clear();
  remove_.Clear();
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgImAuthOrgUpdateAccountInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthOrgUpdateAccountInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> upsert = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&upsert_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string remove = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_remove()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remove(this->remove_size() - 1).data(),
            static_cast<int>(this->remove(this->remove_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoReq.remove"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthOrgUpdateAccountInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthOrgUpdateAccountInfoReq)
  return false;
#undef DO_
}

void XmsgImAuthOrgUpdateAccountInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthOrgUpdateAccountInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgUpdateAccountInfoReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgt(), output);
  }

  // map<string, string> upsert = 2;
  if (!this->upsert().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->upsert().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->upsert().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(upsert_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it) {
        entry.reset(upsert_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string remove = 3;
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remove(i).data(), static_cast<int>(this->remove(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgUpdateAccountInfoReq.remove");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->remove(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthOrgUpdateAccountInfoReq)
}

::google::protobuf::uint8* XmsgImAuthOrgUpdateAccountInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthOrgUpdateAccountInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgUpdateAccountInfoReq.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgt(), target);
  }

  // map<string, string> upsert = 2;
  if (!this->upsert().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoReq.UpsertEntry.value");
      }
    };

    if (deterministic &&
        this->upsert().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->upsert().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(upsert_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->upsert().begin();
          it != this->upsert().end(); ++it) {
        entry.reset(upsert_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string remove = 3;
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remove(i).data(), static_cast<int>(this->remove(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImAuthOrgUpdateAccountInfoReq.remove");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->remove(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthOrgUpdateAccountInfoReq)
  return target;
}

size_t XmsgImAuthOrgUpdateAccountInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthOrgUpdateAccountInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> upsert = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->upsert_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->upsert().begin();
        it != this->upsert().end(); ++it) {
      entry.reset(upsert_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string remove = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->remove_size());
  for (int i = 0, n = this->remove_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->remove(i));
  }

  // string cgt = 1;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthOrgUpdateAccountInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthOrgUpdateAccountInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthOrgUpdateAccountInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthOrgUpdateAccountInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthOrgUpdateAccountInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthOrgUpdateAccountInfoReq)
    MergeFrom(*source);
  }
}

void XmsgImAuthOrgUpdateAccountInfoReq::MergeFrom(const XmsgImAuthOrgUpdateAccountInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthOrgUpdateAccountInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  upsert_.MergeFrom(from.upsert_);
  remove_.MergeFrom(from.remove_);
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
}

void XmsgImAuthOrgUpdateAccountInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthOrgUpdateAccountInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthOrgUpdateAccountInfoReq::CopyFrom(const XmsgImAuthOrgUpdateAccountInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthOrgUpdateAccountInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthOrgUpdateAccountInfoReq::IsInitialized() const {
  return true;
}

void XmsgImAuthOrgUpdateAccountInfoReq::Swap(XmsgImAuthOrgUpdateAccountInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthOrgUpdateAccountInfoReq::InternalSwap(XmsgImAuthOrgUpdateAccountInfoReq* other) {
  using std::swap;
  upsert_.Swap(&other->upsert_);
  remove_.InternalSwap(&other->remove_);
  cgt_.Swap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthOrgUpdateAccountInfoReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse() {}
XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::MergeFrom(const XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[12];
}
void XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImAuthOrgUpdateAccountInfoRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImAuthOrgUpdateAccountInfoRsp::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImAuthOrgUpdateAccountInfoRsp::XmsgImAuthOrgUpdateAccountInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImAuthOrgUpdateAccountInfoRsp)
}
XmsgImAuthOrgUpdateAccountInfoRsp::XmsgImAuthOrgUpdateAccountInfoRsp(const XmsgImAuthOrgUpdateAccountInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImAuthOrgUpdateAccountInfoRsp)
}

void XmsgImAuthOrgUpdateAccountInfoRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImAuthOrgUpdateAccountInfoRsp::~XmsgImAuthOrgUpdateAccountInfoRsp() {
  // @@protoc_insertion_point(destructor:XmsgImAuthOrgUpdateAccountInfoRsp)
  SharedDtor();
}

void XmsgImAuthOrgUpdateAccountInfoRsp::SharedDtor() {
}

void XmsgImAuthOrgUpdateAccountInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImAuthOrgUpdateAccountInfoRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImAuthOrgUpdateAccountInfoRsp& XmsgImAuthOrgUpdateAccountInfoRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp();
  return *internal_default_instance();
}

XmsgImAuthOrgUpdateAccountInfoRsp* XmsgImAuthOrgUpdateAccountInfoRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImAuthOrgUpdateAccountInfoRsp* n = new XmsgImAuthOrgUpdateAccountInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImAuthOrgUpdateAccountInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImAuthOrgUpdateAccountInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImAuthOrgUpdateAccountInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImAuthOrgUpdateAccountInfoRsp)
  return false;
#undef DO_
}

void XmsgImAuthOrgUpdateAccountInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImAuthOrgUpdateAccountInfoRsp)
}

::google::protobuf::uint8* XmsgImAuthOrgUpdateAccountInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImAuthOrgUpdateAccountInfoRsp.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImAuthOrgUpdateAccountInfoRsp)
  return target;
}

size_t XmsgImAuthOrgUpdateAccountInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImAuthOrgUpdateAccountInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImAuthOrgUpdateAccountInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImAuthOrgUpdateAccountInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImAuthOrgUpdateAccountInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImAuthOrgUpdateAccountInfoRsp)
    MergeFrom(*source);
  }
}

void XmsgImAuthOrgUpdateAccountInfoRsp::MergeFrom(const XmsgImAuthOrgUpdateAccountInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImAuthOrgUpdateAccountInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImAuthOrgUpdateAccountInfoRsp::CopyFrom(const XmsgImAuthOrgUpdateAccountInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImAuthOrgUpdateAccountInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImAuthOrgUpdateAccountInfoRsp::IsInitialized() const {
  return true;
}

void XmsgImAuthOrgUpdateAccountInfoRsp::Swap(XmsgImAuthOrgUpdateAccountInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImAuthOrgUpdateAccountInfoRsp::InternalSwap(XmsgImAuthOrgUpdateAccountInfoRsp* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImAuthOrgUpdateAccountInfoRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
