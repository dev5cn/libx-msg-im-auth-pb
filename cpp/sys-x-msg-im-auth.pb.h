// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-im-auth.proto

#ifndef PROTOBUF_sys_2dx_2dmsg_2dim_2dauth_2eproto__INCLUDED
#define PROTOBUF_sys_2dx_2dmsg_2dim_2dauth_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "net-x-msg-im-auth.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImAuthClientAttachSimpleReqImpl();
void InitDefaultsXmsgImAuthClientAttachSimpleReq();
void InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImAuthClientAttachSimpleRspImpl();
void InitDefaultsXmsgImAuthClientAttachSimpleRsp();
void InitDefaultsXmsgImAuthUsrAuthInfoQueryReqImpl();
void InitDefaultsXmsgImAuthUsrAuthInfoQueryReq();
void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImAuthUsrAuthInfoQueryRspImpl();
void InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp();
void InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseImpl();
void InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse();
void InitDefaultsXmsgImAuthOrgRegisteReqImpl();
void InitDefaultsXmsgImAuthOrgRegisteReq();
void InitDefaultsXmsgImAuthOrgRegisteRspImpl();
void InitDefaultsXmsgImAuthOrgRegisteRsp();
void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseImpl();
void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse();
void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReqImpl();
void InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq();
void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse();
void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRspImpl();
void InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp();
inline void InitDefaults() {
  InitDefaultsXmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImAuthClientAttachSimpleReq();
  InitDefaultsXmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImAuthClientAttachSimpleRsp();
  InitDefaultsXmsgImAuthUsrAuthInfoQueryReq();
  InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImAuthUsrAuthInfoQueryRsp();
  InitDefaultsXmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse();
  InitDefaultsXmsgImAuthOrgRegisteReq();
  InitDefaultsXmsgImAuthOrgRegisteRsp();
  InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse();
  InitDefaultsXmsgImAuthOrgUpdateAccountInfoReq();
  InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse();
  InitDefaultsXmsgImAuthOrgUpdateAccountInfoRsp();
}
}  // namespace protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto
class XmsgImAuthClientAttachSimpleReq;
class XmsgImAuthClientAttachSimpleReqDefaultTypeInternal;
extern XmsgImAuthClientAttachSimpleReqDefaultTypeInternal _XmsgImAuthClientAttachSimpleReq_default_instance_;
class XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse;
class XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthClientAttachSimpleRsp;
class XmsgImAuthClientAttachSimpleRspDefaultTypeInternal;
extern XmsgImAuthClientAttachSimpleRspDefaultTypeInternal _XmsgImAuthClientAttachSimpleRsp_default_instance_;
class XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse;
class XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgRegisteReq;
class XmsgImAuthOrgRegisteReqDefaultTypeInternal;
extern XmsgImAuthOrgRegisteReqDefaultTypeInternal _XmsgImAuthOrgRegisteReq_default_instance_;
class XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse;
class XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseDefaultTypeInternal;
extern XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUseDefaultTypeInternal _XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgRegisteRsp;
class XmsgImAuthOrgRegisteRspDefaultTypeInternal;
extern XmsgImAuthOrgRegisteRspDefaultTypeInternal _XmsgImAuthOrgRegisteRsp_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoReq;
class XmsgImAuthOrgUpdateAccountInfoReqDefaultTypeInternal;
extern XmsgImAuthOrgUpdateAccountInfoReqDefaultTypeInternal _XmsgImAuthOrgUpdateAccountInfoReq_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse;
class XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseDefaultTypeInternal;
extern XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUseDefaultTypeInternal _XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoRsp;
class XmsgImAuthOrgUpdateAccountInfoRspDefaultTypeInternal;
extern XmsgImAuthOrgUpdateAccountInfoRspDefaultTypeInternal _XmsgImAuthOrgUpdateAccountInfoRsp_default_instance_;
class XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse;
class XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse_default_instance_;
class XmsgImAuthUsrAuthInfoQueryReq;
class XmsgImAuthUsrAuthInfoQueryReqDefaultTypeInternal;
extern XmsgImAuthUsrAuthInfoQueryReqDefaultTypeInternal _XmsgImAuthUsrAuthInfoQueryReq_default_instance_;
class XmsgImAuthUsrAuthInfoQueryRsp;
class XmsgImAuthUsrAuthInfoQueryRspDefaultTypeInternal;
extern XmsgImAuthUsrAuthInfoQueryRspDefaultTypeInternal _XmsgImAuthUsrAuthInfoQueryRsp_default_instance_;
class XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse;
class XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_;

// ===================================================================

class XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse();
  XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse& other);
  static const XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse*>(&_XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImAuthClientAttachSimpleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImAuthClientAttachSimpleReq) */ {
 public:
  XmsgImAuthClientAttachSimpleReq();
  virtual ~XmsgImAuthClientAttachSimpleReq();

  XmsgImAuthClientAttachSimpleReq(const XmsgImAuthClientAttachSimpleReq& from);

  inline XmsgImAuthClientAttachSimpleReq& operator=(const XmsgImAuthClientAttachSimpleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImAuthClientAttachSimpleReq(XmsgImAuthClientAttachSimpleReq&& from) noexcept
    : XmsgImAuthClientAttachSimpleReq() {
    *this = ::std::move(from);
  }

  inline XmsgImAuthClientAttachSimpleReq& operator=(XmsgImAuthClientAttachSimpleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImAuthClientAttachSimpleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImAuthClientAttachSimpleReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImAuthClientAttachSimpleReq*>(
               &_XmsgImAuthClientAttachSimpleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgImAuthClientAttachSimpleReq* other);
  friend void swap(XmsgImAuthClientAttachSimpleReq& a, XmsgImAuthClientAttachSimpleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImAuthClientAttachSimpleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImAuthClientAttachSimpleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImAuthClientAttachSimpleReq& from);
  void MergeFrom(const XmsgImAuthClientAttachSimpleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImAuthClientAttachSimpleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 6;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string salt = 2;
  void clear_salt();
  static const int kSaltFieldNumber = 2;
  const ::std::string& salt() const;
  void set_salt(const ::std::string& value);
  #if LANG_CXX11
  void set_salt(::std::string&& value);
  #endif
  void set_salt(const char* value);
  void set_salt(const char* value, size_t size);
  ::std::string* mutable_salt();
  ::std::string* release_salt();
  void set_allocated_salt(::std::string* salt);

  // string sign = 3;
  void clear_sign();
  static const int kSignFieldNumber = 3;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // string alg = 4;
  void clear_alg();
  static const int kAlgFieldNumber = 4;
  const ::std::string& alg() const;
  void set_alg(const ::std::string& value);
  #if LANG_CXX11
  void set_alg(::std::string&& value);
  #endif
  void set_alg(const char* value);
  void set_alg(const char* value, size_t size);
  ::std::string* mutable_alg();
  ::std::string* release_alg();
  void set_allocated_alg(::std::string* alg);

  // string cgt = 5;
  void clear_cgt();
  static const int kCgtFieldNumber = 5;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImAuthClientAttachSimpleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImAuthClientAttachSimpleReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr salt_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::internal::ArenaStringPtr alg_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleReqImpl();
};
// -------------------------------------------------------------------

class XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse();
  XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse& other);
  static const XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse*>(&_XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImAuthClientAttachSimpleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImAuthClientAttachSimpleRsp) */ {
 public:
  XmsgImAuthClientAttachSimpleRsp();
  virtual ~XmsgImAuthClientAttachSimpleRsp();

  XmsgImAuthClientAttachSimpleRsp(const XmsgImAuthClientAttachSimpleRsp& from);

  inline XmsgImAuthClientAttachSimpleRsp& operator=(const XmsgImAuthClientAttachSimpleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImAuthClientAttachSimpleRsp(XmsgImAuthClientAttachSimpleRsp&& from) noexcept
    : XmsgImAuthClientAttachSimpleRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImAuthClientAttachSimpleRsp& operator=(XmsgImAuthClientAttachSimpleRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImAuthClientAttachSimpleRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImAuthClientAttachSimpleRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImAuthClientAttachSimpleRsp*>(
               &_XmsgImAuthClientAttachSimpleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImAuthClientAttachSimpleRsp* other);
  friend void swap(XmsgImAuthClientAttachSimpleRsp& a, XmsgImAuthClientAttachSimpleRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImAuthClientAttachSimpleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImAuthClientAttachSimpleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImAuthClientAttachSimpleRsp& from);
  void MergeFrom(const XmsgImAuthClientAttachSimpleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImAuthClientAttachSimpleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 6;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string usr = 1;
  void clear_usr();
  static const int kUsrFieldNumber = 1;
  const ::std::string& usr() const;
  void set_usr(const ::std::string& value);
  #if LANG_CXX11
  void set_usr(::std::string&& value);
  #endif
  void set_usr(const char* value);
  void set_usr(const char* value, size_t size);
  ::std::string* mutable_usr();
  ::std::string* release_usr();
  void set_allocated_usr(::std::string* usr);

  // string secret = 2;
  void clear_secret();
  static const int kSecretFieldNumber = 2;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // .XmsgImClientDeviceInfo info = 5;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 5;
  const ::XmsgImClientDeviceInfo& info() const;
  ::XmsgImClientDeviceInfo* release_info();
  ::XmsgImClientDeviceInfo* mutable_info();
  void set_allocated_info(::XmsgImClientDeviceInfo* info);

  // uint64 gts = 3;
  void clear_gts();
  static const int kGtsFieldNumber = 3;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 expired = 4;
  void clear_expired();
  static const int kExpiredFieldNumber = 4;
  ::google::protobuf::uint64 expired() const;
  void set_expired(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImAuthClientAttachSimpleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImAuthClientAttachSimpleRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr usr_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  ::XmsgImClientDeviceInfo* info_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 expired_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthClientAttachSimpleRspImpl();
};
// -------------------------------------------------------------------

class XmsgImAuthUsrAuthInfoQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImAuthUsrAuthInfoQueryReq) */ {
 public:
  XmsgImAuthUsrAuthInfoQueryReq();
  virtual ~XmsgImAuthUsrAuthInfoQueryReq();

  XmsgImAuthUsrAuthInfoQueryReq(const XmsgImAuthUsrAuthInfoQueryReq& from);

  inline XmsgImAuthUsrAuthInfoQueryReq& operator=(const XmsgImAuthUsrAuthInfoQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImAuthUsrAuthInfoQueryReq(XmsgImAuthUsrAuthInfoQueryReq&& from) noexcept
    : XmsgImAuthUsrAuthInfoQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImAuthUsrAuthInfoQueryReq& operator=(XmsgImAuthUsrAuthInfoQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImAuthUsrAuthInfoQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImAuthUsrAuthInfoQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImAuthUsrAuthInfoQueryReq*>(
               &_XmsgImAuthUsrAuthInfoQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(XmsgImAuthUsrAuthInfoQueryReq* other);
  friend void swap(XmsgImAuthUsrAuthInfoQueryReq& a, XmsgImAuthUsrAuthInfoQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImAuthUsrAuthInfoQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImAuthUsrAuthInfoQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImAuthUsrAuthInfoQueryReq& from);
  void MergeFrom(const XmsgImAuthUsrAuthInfoQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImAuthUsrAuthInfoQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImAuthUsrAuthInfoQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse();
  XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse& other);
  static const XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse*>(&_XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImAuthUsrAuthInfoQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImAuthUsrAuthInfoQueryRsp) */ {
 public:
  XmsgImAuthUsrAuthInfoQueryRsp();
  virtual ~XmsgImAuthUsrAuthInfoQueryRsp();

  XmsgImAuthUsrAuthInfoQueryRsp(const XmsgImAuthUsrAuthInfoQueryRsp& from);

  inline XmsgImAuthUsrAuthInfoQueryRsp& operator=(const XmsgImAuthUsrAuthInfoQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImAuthUsrAuthInfoQueryRsp(XmsgImAuthUsrAuthInfoQueryRsp&& from) noexcept
    : XmsgImAuthUsrAuthInfoQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImAuthUsrAuthInfoQueryRsp& operator=(XmsgImAuthUsrAuthInfoQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImAuthUsrAuthInfoQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImAuthUsrAuthInfoQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImAuthUsrAuthInfoQueryRsp*>(
               &_XmsgImAuthUsrAuthInfoQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImAuthUsrAuthInfoQueryRsp* other);
  friend void swap(XmsgImAuthUsrAuthInfoQueryRsp& a, XmsgImAuthUsrAuthInfoQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImAuthUsrAuthInfoQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImAuthUsrAuthInfoQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImAuthUsrAuthInfoQueryRsp& from);
  void MergeFrom(const XmsgImAuthUsrAuthInfoQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImAuthUsrAuthInfoQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 5;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // string secret = 1;
  void clear_secret();
  static const int kSecretFieldNumber = 1;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // .XmsgImClientDeviceInfo info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::XmsgImClientDeviceInfo& info() const;
  ::XmsgImClientDeviceInfo* release_info();
  ::XmsgImClientDeviceInfo* mutable_info();
  void set_allocated_info(::XmsgImClientDeviceInfo* info);

  // uint64 gts = 2;
  void clear_gts();
  static const int kGtsFieldNumber = 2;
  ::google::protobuf::uint64 gts() const;
  void set_gts(::google::protobuf::uint64 value);

  // uint64 expired = 3;
  void clear_expired();
  static const int kExpiredFieldNumber = 3;
  ::google::protobuf::uint64 expired() const;
  void set_expired(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XmsgImAuthUsrAuthInfoQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImAuthUsrAuthInfoQueryRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  ::XmsgImClientDeviceInfo* info_;
  ::google::protobuf::uint64 gts_;
  ::google::protobuf::uint64 expired_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthUsrAuthInfoQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse();
  XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse& other);
  static const XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse*>(&_XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImAuthOrgRegisteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImAuthOrgRegisteReq) */ {
 public:
  XmsgImAuthOrgRegisteReq();
  virtual ~XmsgImAuthOrgRegisteReq();

  XmsgImAuthOrgRegisteReq(const XmsgImAuthOrgRegisteReq& from);

  inline XmsgImAuthOrgRegisteReq& operator=(const XmsgImAuthOrgRegisteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImAuthOrgRegisteReq(XmsgImAuthOrgRegisteReq&& from) noexcept
    : XmsgImAuthOrgRegisteReq() {
    *this = ::std::move(from);
  }

  inline XmsgImAuthOrgRegisteReq& operator=(XmsgImAuthOrgRegisteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImAuthOrgRegisteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImAuthOrgRegisteReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImAuthOrgRegisteReq*>(
               &_XmsgImAuthOrgRegisteReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgImAuthOrgRegisteReq* other);
  friend void swap(XmsgImAuthOrgRegisteReq& a, XmsgImAuthOrgRegisteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImAuthOrgRegisteReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImAuthOrgRegisteReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImAuthOrgRegisteReq& from);
  void MergeFrom(const XmsgImAuthOrgRegisteReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImAuthOrgRegisteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> info = 2;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_info();

  // bool enable = 1;
  void clear_enable();
  static const int kEnableFieldNumber = 1;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:XmsgImAuthOrgRegisteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImAuthOrgRegisteReq_InfoEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > info_;
  bool enable_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgRegisteReqImpl();
};
// -------------------------------------------------------------------

class XmsgImAuthOrgRegisteRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImAuthOrgRegisteRsp) */ {
 public:
  XmsgImAuthOrgRegisteRsp();
  virtual ~XmsgImAuthOrgRegisteRsp();

  XmsgImAuthOrgRegisteRsp(const XmsgImAuthOrgRegisteRsp& from);

  inline XmsgImAuthOrgRegisteRsp& operator=(const XmsgImAuthOrgRegisteRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImAuthOrgRegisteRsp(XmsgImAuthOrgRegisteRsp&& from) noexcept
    : XmsgImAuthOrgRegisteRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImAuthOrgRegisteRsp& operator=(XmsgImAuthOrgRegisteRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImAuthOrgRegisteRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImAuthOrgRegisteRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImAuthOrgRegisteRsp*>(
               &_XmsgImAuthOrgRegisteRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XmsgImAuthOrgRegisteRsp* other);
  friend void swap(XmsgImAuthOrgRegisteRsp& a, XmsgImAuthOrgRegisteRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImAuthOrgRegisteRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImAuthOrgRegisteRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImAuthOrgRegisteRsp& from);
  void MergeFrom(const XmsgImAuthOrgRegisteRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImAuthOrgRegisteRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImAuthOrgRegisteRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgRegisteRspImpl();
};
// -------------------------------------------------------------------

class XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse();
  XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse& other);
  static const XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse*>(&_XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImAuthOrgUpdateAccountInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImAuthOrgUpdateAccountInfoReq) */ {
 public:
  XmsgImAuthOrgUpdateAccountInfoReq();
  virtual ~XmsgImAuthOrgUpdateAccountInfoReq();

  XmsgImAuthOrgUpdateAccountInfoReq(const XmsgImAuthOrgUpdateAccountInfoReq& from);

  inline XmsgImAuthOrgUpdateAccountInfoReq& operator=(const XmsgImAuthOrgUpdateAccountInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImAuthOrgUpdateAccountInfoReq(XmsgImAuthOrgUpdateAccountInfoReq&& from) noexcept
    : XmsgImAuthOrgUpdateAccountInfoReq() {
    *this = ::std::move(from);
  }

  inline XmsgImAuthOrgUpdateAccountInfoReq& operator=(XmsgImAuthOrgUpdateAccountInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImAuthOrgUpdateAccountInfoReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImAuthOrgUpdateAccountInfoReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImAuthOrgUpdateAccountInfoReq*>(
               &_XmsgImAuthOrgUpdateAccountInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(XmsgImAuthOrgUpdateAccountInfoReq* other);
  friend void swap(XmsgImAuthOrgUpdateAccountInfoReq& a, XmsgImAuthOrgUpdateAccountInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImAuthOrgUpdateAccountInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImAuthOrgUpdateAccountInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImAuthOrgUpdateAccountInfoReq& from);
  void MergeFrom(const XmsgImAuthOrgUpdateAccountInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImAuthOrgUpdateAccountInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> upsert = 2;
  int upsert_size() const;
  void clear_upsert();
  static const int kUpsertFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      upsert() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_upsert();

  // repeated string remove = 3;
  int remove_size() const;
  void clear_remove();
  static const int kRemoveFieldNumber = 3;
  const ::std::string& remove(int index) const;
  ::std::string* mutable_remove(int index);
  void set_remove(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_remove(int index, ::std::string&& value);
  #endif
  void set_remove(int index, const char* value);
  void set_remove(int index, const char* value, size_t size);
  ::std::string* add_remove();
  void add_remove(const ::std::string& value);
  #if LANG_CXX11
  void add_remove(::std::string&& value);
  #endif
  void add_remove(const char* value);
  void add_remove(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& remove() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_remove();

  // string cgt = 1;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // @@protoc_insertion_point(class_scope:XmsgImAuthOrgUpdateAccountInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImAuthOrgUpdateAccountInfoReq_UpsertEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > upsert_;
  ::google::protobuf::RepeatedPtrField< ::std::string> remove_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoReqImpl();
};
// -------------------------------------------------------------------

class XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse();
  XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse& other);
  static const XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse*>(&_XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImAuthOrgUpdateAccountInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImAuthOrgUpdateAccountInfoRsp) */ {
 public:
  XmsgImAuthOrgUpdateAccountInfoRsp();
  virtual ~XmsgImAuthOrgUpdateAccountInfoRsp();

  XmsgImAuthOrgUpdateAccountInfoRsp(const XmsgImAuthOrgUpdateAccountInfoRsp& from);

  inline XmsgImAuthOrgUpdateAccountInfoRsp& operator=(const XmsgImAuthOrgUpdateAccountInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImAuthOrgUpdateAccountInfoRsp(XmsgImAuthOrgUpdateAccountInfoRsp&& from) noexcept
    : XmsgImAuthOrgUpdateAccountInfoRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImAuthOrgUpdateAccountInfoRsp& operator=(XmsgImAuthOrgUpdateAccountInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImAuthOrgUpdateAccountInfoRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImAuthOrgUpdateAccountInfoRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImAuthOrgUpdateAccountInfoRsp*>(
               &_XmsgImAuthOrgUpdateAccountInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(XmsgImAuthOrgUpdateAccountInfoRsp* other);
  friend void swap(XmsgImAuthOrgUpdateAccountInfoRsp& a, XmsgImAuthOrgUpdateAccountInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImAuthOrgUpdateAccountInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImAuthOrgUpdateAccountInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImAuthOrgUpdateAccountInfoRsp& from);
  void MergeFrom(const XmsgImAuthOrgUpdateAccountInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImAuthOrgUpdateAccountInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImAuthOrgUpdateAccountInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImAuthOrgUpdateAccountInfoRsp_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dauth_2eproto::InitDefaultsXmsgImAuthOrgUpdateAccountInfoRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// XmsgImAuthClientAttachSimpleReq

// string token = 1;
inline void XmsgImAuthClientAttachSimpleReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthClientAttachSimpleReq::token() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleReq.token)
  return token_.GetNoArena();
}
inline void XmsgImAuthClientAttachSimpleReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleReq.token)
}
#if LANG_CXX11
inline void XmsgImAuthClientAttachSimpleReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthClientAttachSimpleReq.token)
}
#endif
inline void XmsgImAuthClientAttachSimpleReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthClientAttachSimpleReq.token)
}
inline void XmsgImAuthClientAttachSimpleReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthClientAttachSimpleReq.token)
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthClientAttachSimpleReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::release_token() {
  // @@protoc_insertion_point(field_release:XmsgImAuthClientAttachSimpleReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthClientAttachSimpleReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthClientAttachSimpleReq.token)
}

// string salt = 2;
inline void XmsgImAuthClientAttachSimpleReq::clear_salt() {
  salt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthClientAttachSimpleReq::salt() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleReq.salt)
  return salt_.GetNoArena();
}
inline void XmsgImAuthClientAttachSimpleReq::set_salt(const ::std::string& value) {
  
  salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleReq.salt)
}
#if LANG_CXX11
inline void XmsgImAuthClientAttachSimpleReq::set_salt(::std::string&& value) {
  
  salt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthClientAttachSimpleReq.salt)
}
#endif
inline void XmsgImAuthClientAttachSimpleReq::set_salt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthClientAttachSimpleReq.salt)
}
inline void XmsgImAuthClientAttachSimpleReq::set_salt(const char* value, size_t size) {
  
  salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthClientAttachSimpleReq.salt)
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::mutable_salt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthClientAttachSimpleReq.salt)
  return salt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::release_salt() {
  // @@protoc_insertion_point(field_release:XmsgImAuthClientAttachSimpleReq.salt)
  
  return salt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthClientAttachSimpleReq::set_allocated_salt(::std::string* salt) {
  if (salt != NULL) {
    
  } else {
    
  }
  salt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), salt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthClientAttachSimpleReq.salt)
}

// string sign = 3;
inline void XmsgImAuthClientAttachSimpleReq::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthClientAttachSimpleReq::sign() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleReq.sign)
  return sign_.GetNoArena();
}
inline void XmsgImAuthClientAttachSimpleReq::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleReq.sign)
}
#if LANG_CXX11
inline void XmsgImAuthClientAttachSimpleReq::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthClientAttachSimpleReq.sign)
}
#endif
inline void XmsgImAuthClientAttachSimpleReq::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthClientAttachSimpleReq.sign)
}
inline void XmsgImAuthClientAttachSimpleReq::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthClientAttachSimpleReq.sign)
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthClientAttachSimpleReq.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::release_sign() {
  // @@protoc_insertion_point(field_release:XmsgImAuthClientAttachSimpleReq.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthClientAttachSimpleReq::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthClientAttachSimpleReq.sign)
}

// string alg = 4;
inline void XmsgImAuthClientAttachSimpleReq::clear_alg() {
  alg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthClientAttachSimpleReq::alg() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleReq.alg)
  return alg_.GetNoArena();
}
inline void XmsgImAuthClientAttachSimpleReq::set_alg(const ::std::string& value) {
  
  alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleReq.alg)
}
#if LANG_CXX11
inline void XmsgImAuthClientAttachSimpleReq::set_alg(::std::string&& value) {
  
  alg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthClientAttachSimpleReq.alg)
}
#endif
inline void XmsgImAuthClientAttachSimpleReq::set_alg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthClientAttachSimpleReq.alg)
}
inline void XmsgImAuthClientAttachSimpleReq::set_alg(const char* value, size_t size) {
  
  alg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthClientAttachSimpleReq.alg)
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::mutable_alg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthClientAttachSimpleReq.alg)
  return alg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::release_alg() {
  // @@protoc_insertion_point(field_release:XmsgImAuthClientAttachSimpleReq.alg)
  
  return alg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthClientAttachSimpleReq::set_allocated_alg(::std::string* alg) {
  if (alg != NULL) {
    
  } else {
    
  }
  alg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alg);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthClientAttachSimpleReq.alg)
}

// string cgt = 5;
inline void XmsgImAuthClientAttachSimpleReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthClientAttachSimpleReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImAuthClientAttachSimpleReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleReq.cgt)
}
#if LANG_CXX11
inline void XmsgImAuthClientAttachSimpleReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthClientAttachSimpleReq.cgt)
}
#endif
inline void XmsgImAuthClientAttachSimpleReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthClientAttachSimpleReq.cgt)
}
inline void XmsgImAuthClientAttachSimpleReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthClientAttachSimpleReq.cgt)
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthClientAttachSimpleReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthClientAttachSimpleReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImAuthClientAttachSimpleReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthClientAttachSimpleReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthClientAttachSimpleReq.cgt)
}

// map<string, string> ext = 6;
inline int XmsgImAuthClientAttachSimpleReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImAuthClientAttachSimpleReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImAuthClientAttachSimpleReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImAuthClientAttachSimpleReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImAuthClientAttachSimpleReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImAuthClientAttachSimpleReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImAuthClientAttachSimpleRsp

// string usr = 1;
inline void XmsgImAuthClientAttachSimpleRsp::clear_usr() {
  usr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthClientAttachSimpleRsp::usr() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleRsp.usr)
  return usr_.GetNoArena();
}
inline void XmsgImAuthClientAttachSimpleRsp::set_usr(const ::std::string& value) {
  
  usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleRsp.usr)
}
#if LANG_CXX11
inline void XmsgImAuthClientAttachSimpleRsp::set_usr(::std::string&& value) {
  
  usr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthClientAttachSimpleRsp.usr)
}
#endif
inline void XmsgImAuthClientAttachSimpleRsp::set_usr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthClientAttachSimpleRsp.usr)
}
inline void XmsgImAuthClientAttachSimpleRsp::set_usr(const char* value, size_t size) {
  
  usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthClientAttachSimpleRsp.usr)
}
inline ::std::string* XmsgImAuthClientAttachSimpleRsp::mutable_usr() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthClientAttachSimpleRsp.usr)
  return usr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthClientAttachSimpleRsp::release_usr() {
  // @@protoc_insertion_point(field_release:XmsgImAuthClientAttachSimpleRsp.usr)
  
  return usr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthClientAttachSimpleRsp::set_allocated_usr(::std::string* usr) {
  if (usr != NULL) {
    
  } else {
    
  }
  usr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthClientAttachSimpleRsp.usr)
}

// string secret = 2;
inline void XmsgImAuthClientAttachSimpleRsp::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthClientAttachSimpleRsp::secret() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleRsp.secret)
  return secret_.GetNoArena();
}
inline void XmsgImAuthClientAttachSimpleRsp::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleRsp.secret)
}
#if LANG_CXX11
inline void XmsgImAuthClientAttachSimpleRsp::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthClientAttachSimpleRsp.secret)
}
#endif
inline void XmsgImAuthClientAttachSimpleRsp::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthClientAttachSimpleRsp.secret)
}
inline void XmsgImAuthClientAttachSimpleRsp::set_secret(const char* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthClientAttachSimpleRsp.secret)
}
inline ::std::string* XmsgImAuthClientAttachSimpleRsp::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthClientAttachSimpleRsp.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthClientAttachSimpleRsp::release_secret() {
  // @@protoc_insertion_point(field_release:XmsgImAuthClientAttachSimpleRsp.secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthClientAttachSimpleRsp::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthClientAttachSimpleRsp.secret)
}

// uint64 gts = 3;
inline void XmsgImAuthClientAttachSimpleRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImAuthClientAttachSimpleRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleRsp.gts)
  return gts_;
}
inline void XmsgImAuthClientAttachSimpleRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleRsp.gts)
}

// uint64 expired = 4;
inline void XmsgImAuthClientAttachSimpleRsp::clear_expired() {
  expired_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImAuthClientAttachSimpleRsp::expired() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleRsp.expired)
  return expired_;
}
inline void XmsgImAuthClientAttachSimpleRsp::set_expired(::google::protobuf::uint64 value) {
  
  expired_ = value;
  // @@protoc_insertion_point(field_set:XmsgImAuthClientAttachSimpleRsp.expired)
}

// .XmsgImClientDeviceInfo info = 5;
inline bool XmsgImAuthClientAttachSimpleRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline const ::XmsgImClientDeviceInfo& XmsgImAuthClientAttachSimpleRsp::info() const {
  const ::XmsgImClientDeviceInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImAuthClientAttachSimpleRsp.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImClientDeviceInfo*>(
      &::_XmsgImClientDeviceInfo_default_instance_);
}
inline ::XmsgImClientDeviceInfo* XmsgImAuthClientAttachSimpleRsp::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImAuthClientAttachSimpleRsp.info)
  
  ::XmsgImClientDeviceInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImClientDeviceInfo* XmsgImAuthClientAttachSimpleRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImClientDeviceInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImAuthClientAttachSimpleRsp.info)
  return info_;
}
inline void XmsgImAuthClientAttachSimpleRsp::set_allocated_info(::XmsgImClientDeviceInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(info_);
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthClientAttachSimpleRsp.info)
}

// map<string, string> ext = 6;
inline int XmsgImAuthClientAttachSimpleRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImAuthClientAttachSimpleRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImAuthClientAttachSimpleRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImAuthClientAttachSimpleRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImAuthClientAttachSimpleRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImAuthClientAttachSimpleRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImAuthUsrAuthInfoQueryReq

// string token = 1;
inline void XmsgImAuthUsrAuthInfoQueryReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthUsrAuthInfoQueryReq::token() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthUsrAuthInfoQueryReq.token)
  return token_.GetNoArena();
}
inline void XmsgImAuthUsrAuthInfoQueryReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthUsrAuthInfoQueryReq.token)
}
#if LANG_CXX11
inline void XmsgImAuthUsrAuthInfoQueryReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthUsrAuthInfoQueryReq.token)
}
#endif
inline void XmsgImAuthUsrAuthInfoQueryReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthUsrAuthInfoQueryReq.token)
}
inline void XmsgImAuthUsrAuthInfoQueryReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthUsrAuthInfoQueryReq.token)
}
inline ::std::string* XmsgImAuthUsrAuthInfoQueryReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthUsrAuthInfoQueryReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthUsrAuthInfoQueryReq::release_token() {
  // @@protoc_insertion_point(field_release:XmsgImAuthUsrAuthInfoQueryReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthUsrAuthInfoQueryReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthUsrAuthInfoQueryReq.token)
}

// string cgt = 2;
inline void XmsgImAuthUsrAuthInfoQueryReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthUsrAuthInfoQueryReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthUsrAuthInfoQueryReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImAuthUsrAuthInfoQueryReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthUsrAuthInfoQueryReq.cgt)
}
#if LANG_CXX11
inline void XmsgImAuthUsrAuthInfoQueryReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthUsrAuthInfoQueryReq.cgt)
}
#endif
inline void XmsgImAuthUsrAuthInfoQueryReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthUsrAuthInfoQueryReq.cgt)
}
inline void XmsgImAuthUsrAuthInfoQueryReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthUsrAuthInfoQueryReq.cgt)
}
inline ::std::string* XmsgImAuthUsrAuthInfoQueryReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthUsrAuthInfoQueryReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthUsrAuthInfoQueryReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImAuthUsrAuthInfoQueryReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthUsrAuthInfoQueryReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthUsrAuthInfoQueryReq.cgt)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImAuthUsrAuthInfoQueryRsp

// string secret = 1;
inline void XmsgImAuthUsrAuthInfoQueryRsp::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthUsrAuthInfoQueryRsp::secret() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthUsrAuthInfoQueryRsp.secret)
  return secret_.GetNoArena();
}
inline void XmsgImAuthUsrAuthInfoQueryRsp::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthUsrAuthInfoQueryRsp.secret)
}
#if LANG_CXX11
inline void XmsgImAuthUsrAuthInfoQueryRsp::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthUsrAuthInfoQueryRsp.secret)
}
#endif
inline void XmsgImAuthUsrAuthInfoQueryRsp::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthUsrAuthInfoQueryRsp.secret)
}
inline void XmsgImAuthUsrAuthInfoQueryRsp::set_secret(const char* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthUsrAuthInfoQueryRsp.secret)
}
inline ::std::string* XmsgImAuthUsrAuthInfoQueryRsp::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthUsrAuthInfoQueryRsp.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthUsrAuthInfoQueryRsp::release_secret() {
  // @@protoc_insertion_point(field_release:XmsgImAuthUsrAuthInfoQueryRsp.secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthUsrAuthInfoQueryRsp::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthUsrAuthInfoQueryRsp.secret)
}

// uint64 gts = 2;
inline void XmsgImAuthUsrAuthInfoQueryRsp::clear_gts() {
  gts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImAuthUsrAuthInfoQueryRsp::gts() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthUsrAuthInfoQueryRsp.gts)
  return gts_;
}
inline void XmsgImAuthUsrAuthInfoQueryRsp::set_gts(::google::protobuf::uint64 value) {
  
  gts_ = value;
  // @@protoc_insertion_point(field_set:XmsgImAuthUsrAuthInfoQueryRsp.gts)
}

// uint64 expired = 3;
inline void XmsgImAuthUsrAuthInfoQueryRsp::clear_expired() {
  expired_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgImAuthUsrAuthInfoQueryRsp::expired() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthUsrAuthInfoQueryRsp.expired)
  return expired_;
}
inline void XmsgImAuthUsrAuthInfoQueryRsp::set_expired(::google::protobuf::uint64 value) {
  
  expired_ = value;
  // @@protoc_insertion_point(field_set:XmsgImAuthUsrAuthInfoQueryRsp.expired)
}

// .XmsgImClientDeviceInfo info = 4;
inline bool XmsgImAuthUsrAuthInfoQueryRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline const ::XmsgImClientDeviceInfo& XmsgImAuthUsrAuthInfoQueryRsp::info() const {
  const ::XmsgImClientDeviceInfo* p = info_;
  // @@protoc_insertion_point(field_get:XmsgImAuthUsrAuthInfoQueryRsp.info)
  return p != NULL ? *p : *reinterpret_cast<const ::XmsgImClientDeviceInfo*>(
      &::_XmsgImClientDeviceInfo_default_instance_);
}
inline ::XmsgImClientDeviceInfo* XmsgImAuthUsrAuthInfoQueryRsp::release_info() {
  // @@protoc_insertion_point(field_release:XmsgImAuthUsrAuthInfoQueryRsp.info)
  
  ::XmsgImClientDeviceInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::XmsgImClientDeviceInfo* XmsgImAuthUsrAuthInfoQueryRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::XmsgImClientDeviceInfo;
  }
  // @@protoc_insertion_point(field_mutable:XmsgImAuthUsrAuthInfoQueryRsp.info)
  return info_;
}
inline void XmsgImAuthUsrAuthInfoQueryRsp::set_allocated_info(::XmsgImClientDeviceInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(info_);
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthUsrAuthInfoQueryRsp.info)
}

// map<string, string> ext = 5;
inline int XmsgImAuthUsrAuthInfoQueryRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImAuthUsrAuthInfoQueryRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImAuthUsrAuthInfoQueryRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImAuthUsrAuthInfoQueryRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImAuthUsrAuthInfoQueryRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImAuthUsrAuthInfoQueryRsp.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImAuthOrgRegisteReq

// bool enable = 1;
inline void XmsgImAuthOrgRegisteReq::clear_enable() {
  enable_ = false;
}
inline bool XmsgImAuthOrgRegisteReq::enable() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthOrgRegisteReq.enable)
  return enable_;
}
inline void XmsgImAuthOrgRegisteReq::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:XmsgImAuthOrgRegisteReq.enable)
}

// map<string, string> info = 2;
inline int XmsgImAuthOrgRegisteReq::info_size() const {
  return info_.size();
}
inline void XmsgImAuthOrgRegisteReq::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImAuthOrgRegisteReq::info() const {
  // @@protoc_insertion_point(field_map:XmsgImAuthOrgRegisteReq.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImAuthOrgRegisteReq::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImAuthOrgRegisteReq.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImAuthOrgRegisteRsp

// string cgt = 1;
inline void XmsgImAuthOrgRegisteRsp::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthOrgRegisteRsp::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthOrgRegisteRsp.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImAuthOrgRegisteRsp::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthOrgRegisteRsp.cgt)
}
#if LANG_CXX11
inline void XmsgImAuthOrgRegisteRsp::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthOrgRegisteRsp.cgt)
}
#endif
inline void XmsgImAuthOrgRegisteRsp::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthOrgRegisteRsp.cgt)
}
inline void XmsgImAuthOrgRegisteRsp::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthOrgRegisteRsp.cgt)
}
inline ::std::string* XmsgImAuthOrgRegisteRsp::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthOrgRegisteRsp.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthOrgRegisteRsp::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImAuthOrgRegisteRsp.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthOrgRegisteRsp::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthOrgRegisteRsp.cgt)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImAuthOrgUpdateAccountInfoReq

// string cgt = 1;
inline void XmsgImAuthOrgUpdateAccountInfoReq::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImAuthOrgUpdateAccountInfoReq::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgImAuthOrgUpdateAccountInfoReq.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImAuthOrgUpdateAccountInfoReq.cgt)
}
#if LANG_CXX11
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImAuthOrgUpdateAccountInfoReq.cgt)
}
#endif
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImAuthOrgUpdateAccountInfoReq.cgt)
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthOrgUpdateAccountInfoReq.cgt)
}
inline ::std::string* XmsgImAuthOrgUpdateAccountInfoReq::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImAuthOrgUpdateAccountInfoReq.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImAuthOrgUpdateAccountInfoReq::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgImAuthOrgUpdateAccountInfoReq.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgImAuthOrgUpdateAccountInfoReq.cgt)
}

// map<string, string> upsert = 2;
inline int XmsgImAuthOrgUpdateAccountInfoReq::upsert_size() const {
  return upsert_.size();
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::clear_upsert() {
  upsert_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImAuthOrgUpdateAccountInfoReq::upsert() const {
  // @@protoc_insertion_point(field_map:XmsgImAuthOrgUpdateAccountInfoReq.upsert)
  return upsert_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImAuthOrgUpdateAccountInfoReq::mutable_upsert() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImAuthOrgUpdateAccountInfoReq.upsert)
  return upsert_.MutableMap();
}

// repeated string remove = 3;
inline int XmsgImAuthOrgUpdateAccountInfoReq::remove_size() const {
  return remove_.size();
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::clear_remove() {
  remove_.Clear();
}
inline const ::std::string& XmsgImAuthOrgUpdateAccountInfoReq::remove(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImAuthOrgUpdateAccountInfoReq.remove)
  return remove_.Get(index);
}
inline ::std::string* XmsgImAuthOrgUpdateAccountInfoReq::mutable_remove(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImAuthOrgUpdateAccountInfoReq.remove)
  return remove_.Mutable(index);
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_remove(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XmsgImAuthOrgUpdateAccountInfoReq.remove)
  remove_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_remove(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XmsgImAuthOrgUpdateAccountInfoReq.remove)
  remove_.Mutable(index)->assign(std::move(value));
}
#endif
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_remove(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  remove_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XmsgImAuthOrgUpdateAccountInfoReq.remove)
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::set_remove(int index, const char* value, size_t size) {
  remove_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XmsgImAuthOrgUpdateAccountInfoReq.remove)
}
inline ::std::string* XmsgImAuthOrgUpdateAccountInfoReq::add_remove() {
  // @@protoc_insertion_point(field_add_mutable:XmsgImAuthOrgUpdateAccountInfoReq.remove)
  return remove_.Add();
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::add_remove(const ::std::string& value) {
  remove_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XmsgImAuthOrgUpdateAccountInfoReq.remove)
}
#if LANG_CXX11
inline void XmsgImAuthOrgUpdateAccountInfoReq::add_remove(::std::string&& value) {
  remove_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XmsgImAuthOrgUpdateAccountInfoReq.remove)
}
#endif
inline void XmsgImAuthOrgUpdateAccountInfoReq::add_remove(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  remove_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XmsgImAuthOrgUpdateAccountInfoReq.remove)
}
inline void XmsgImAuthOrgUpdateAccountInfoReq::add_remove(const char* value, size_t size) {
  remove_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XmsgImAuthOrgUpdateAccountInfoReq.remove)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
XmsgImAuthOrgUpdateAccountInfoReq::remove() const {
  // @@protoc_insertion_point(field_list:XmsgImAuthOrgUpdateAccountInfoReq.remove)
  return remove_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
XmsgImAuthOrgUpdateAccountInfoReq::mutable_remove() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImAuthOrgUpdateAccountInfoReq.remove)
  return &remove_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImAuthOrgUpdateAccountInfoRsp

// map<string, string> ext = 1;
inline int XmsgImAuthOrgUpdateAccountInfoRsp::ext_size() const {
  return ext_.size();
}
inline void XmsgImAuthOrgUpdateAccountInfoRsp::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImAuthOrgUpdateAccountInfoRsp::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImAuthOrgUpdateAccountInfoRsp.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImAuthOrgUpdateAccountInfoRsp::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImAuthOrgUpdateAccountInfoRsp.ext)
  return ext_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sys_2dx_2dmsg_2dim_2dauth_2eproto__INCLUDED
